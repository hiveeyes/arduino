; PlatformIO project configuration file for Hiveeyes Arduino Firmwares
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/en/latest/projectconf/


[platformio]

# Please invoke by setting `src_dir` dynamically. Example:
#   PLATFORMIO_SRC_DIR=json pio run --environment=samd-m4

# `src_dir` has been deactivated.
# src_dir = .


[common]
lib_deps =
    # TODO: `MemoryFree` is currently a strong dependency of `Terrine` - make it an optional one.
    apechinsky/MemoryFree@^0.3
    # TODO: Update to ArduinoJson 6
    bblanchon/ArduinoJson@^5
lib_extra_dirs =
    ${PROJECT_DIR}/../../../libraries

build_flags =


[env:native]
# About:    Build and invoke example programs on your workstation (native / POSIX).
# Synopsis: PLATFORMIO_SRC_DIR=csv pio run --environment native --target exec
# Remark:   Run `pio pkg update` when invoking `exec` target fails.
# Documentation:
# - https://docs.platformio.org/en/latest/platforms/native.html
# - https://docs.platformio.org/en/latest/platforms/creating_platform.html#build-script-main-py
platform = native

lib_compat_mode = off
lib_deps =
    # TODO: Update to ArduinoJson 6
    bblanchon/ArduinoJson@^5
    TerkinData
    Terrine
lib_extra_dirs =
    ${PROJECT_DIR}/../../../libraries
build_flags =
    -std=gnu++11
    # FIXME: Why is that needed? What overwrites it?
    -I ${platformio.libdeps_dir}/${this.__env__}/ArduinoJson
    -DHAVE_ARDUINO_JSON
    # -g -lstdc++
    # -Os -fno-exceptions -ffunction-sections -fdata-sections -fpermissive
    # -Wno-builtin-macro-redefined -Wno-unused-function -fdiagnostics-color
    # -Wall
    # -Wextra


[env:native-radiohead]
# Native build with RadioHead, for simulation purposes.
# http://www.airspayce.com/mikem/arduino/RadioHead/classRH__TCP.html
platform = native
lib_deps =
    ${env:native.lib_deps}
    mikem/RadioHead@^1.120
lib_extra_dirs =
    ${env:native.lib_extra_dirs}
build_flags =
    ${env:native.build_flags}
    # FIXME: Why is that needed? What overwrites it?
    -I ${platformio.libdeps_dir}/${this.__env__}/RadioHead
    -D RH_SIMULATOR=true
    -D SERIAL_PORT_HARDWARE=


[env:avr328]
platform = atmelavr
board = pro8MHzatmega328
framework = arduino

lib_deps =
    ${common.lib_deps}
    mike-matera/ArduinoSTL@^1.1.0
lib_extra_dirs =
    ${common.lib_extra_dirs}
build_flags =
    ${common.build_flags}
    # FIXME: Why is that needed? What overwrites it?
    -I ${platformio.libdeps_dir}/${this.__env__}/ArduinoSTL/src
    -I ${platformio.libdeps_dir}/${this.__env__}/MemoryFree


[env:esp8266]
platform = espressif8266
board = nodemcuv2
framework = arduino

lib_deps =
    ${common.lib_deps}
lib_extra_dirs =
    ${common.lib_extra_dirs}
build_flags =
    ${common.build_flags}
    -I ${platformio.libdeps_dir}/${this.__env__}/MemoryFree


[env:esp32]
platform = espressif32
board = ttgo-t1
framework = arduino

lib_deps =
    ${common.lib_deps}
lib_extra_dirs =
    ${common.lib_extra_dirs}
build_flags =
    ${common.build_flags}
    -D SERIAL_PORT_HARDWARE=Serial


[env:esp32s2]
platform = https://github.com/platformio/platform-espressif32.git#feature/arduino-idf-v4.2
platform_packages = framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git
board = featheresp32-s2
#board = metroesp32-s2
framework = arduino

; change microcontroller
board_build.mcu = esp32s2

lib_deps =
    ${common.lib_deps}
lib_extra_dirs =
    ${common.lib_extra_dirs}
build_flags =
    ${common.build_flags}
    -D SERIAL_PORT_HARDWARE=Serial


[env:samd-m0]
platform = atmelsam
board = adafruit_feather_m0
framework = arduino

; change microcontroller
board_build.mcu = samd21g18a

lib_deps =
    ${common.lib_deps}
    adafruit/Adafruit Zero DMA Library @ ^1.1.1
lib_extra_dirs =
    ${common.lib_extra_dirs}
build_flags =
    ${common.build_flags}
    -I "${platformio.libdeps_dir}/${this.__env__}/Adafruit Zero DMA Library"
    -I "${platformio.libdeps_dir}/${this.__env__}/MemoryFree"


[env:samd-m4]
platform = atmelsam
board = adafruit_feather_m4_can
framework = arduino

; change microcontroller
board_build.mcu = same51j19a

lib_deps =
    ${common.lib_deps}
    adafruit/Adafruit Zero DMA Library @ ^1.1.1
lib_extra_dirs =
    ${common.lib_extra_dirs}
build_flags =
    ${common.build_flags}
    -I "${platformio.libdeps_dir}/${this.__env__}/Adafruit Zero DMA Library"
    -I "${platformio.libdeps_dir}/${this.__env__}/MemoryFree"
