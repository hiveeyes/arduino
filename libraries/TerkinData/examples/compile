#!/bin/bash
# Build example programs against glibc.
# Usage: ./compile csv_basic.cpp

BUILD_DIR="${BUILD_DIR:-.build}"
mkdir -p ${BUILD_DIR}

INPUT=$1
OUTPUT=${BUILD_DIR}/$(basename $INPUT ".cpp")

LIB_DIR="../.."
TERRINE="${LIB_DIR}/Terrine"
TERKINDATA="${LIB_DIR}/TerkinData"
# TODO: Acquire `ArduinoJson` independently of the `avr328` environment.
ARDUINOJSON="${PLATFORMIO_WORKSPACE_DIR}/libdeps/avr328/ArduinoJson"
INCLUDE="-I$TERRINE -I$TERKINDATA -I$ARDUINOJSON"

#CPP=g++
#CPP=/usr/local/bin/g++-12
CPP=clang
#CPP=/usr/local/Cellar/llvm/16.0.1/bin/clang

# ./sim/compat.h
CPP_FLAGS="-x c++ -lstdc++ -std=gnu++11 -Os -fno-exceptions -ffunction-sections -fdata-sections -fpermissive"
CPP_FLAGS_MORE="-Wall -Wextra -Wno-builtin-macro-redefined -Wno-unused-function -fdiagnostics-color -DHAVE_ARDUINO_JSON"
# -pedantic

$CPP -g -I. $INCLUDE $CPP_FLAGS $CPP_FLAGS_MORE \
    $INPUT \
    $TERRINE/Terrine.cpp $TERKINDATA/TerkinData.cpp \
    -o $OUTPUT
